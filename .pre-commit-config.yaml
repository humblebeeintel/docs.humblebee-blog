fail_fast: true
default_language_version:
  python: python3.10
exclude: |
  (?x)^(
      \.git/
    | \.venv/
    | \.env/
    | venv/
    | env/
    | build/
    | dist/
    | site/
    | site-packages/
    | node_modules/
    | logs/
  )$

repos:
  # --- Basic gatekeepers ---
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      # Common Checks
      - id: check-json
        name: "📄 check-json - Validate JSON files"
        files: \.json$
      - id: check-toml
        name: "📄 check-toml - Validate TOML files"
        files: \.toml$
      - id: check-yaml
        name: "📄 check-yaml - Validate YAML files"
        files: \.ya?ml$
        exclude: ^mkdocs\.ya?ml$
      - id: end-of-file-fixer
        name: "📄 end-of-file-fixer - Ensure files end with a newline"
      - id: mixed-line-ending
        name: "📄 mixed-line-ending - Ensure consistent line endings"
      - id: trailing-whitespace
        name: "📄 trailing-whitespace - Remove trailing whitespace"
        exclude: '\.md$'
      - id: fix-byte-order-marker
        name: "📄 fix-byte-order-marker - Remove BOM from files"
      - id: detect-private-key
        name: "🔑 detect-private-key - Detect private keys in files"
      # Filesystem Checks
      - id: check-case-conflict
        name: "📂 check-case-conflict - Check case conflicts in filenames"
      - id: check-symlinks
        name: "📂 check-symlinks - Check broken symlinks"
      - id: destroyed-symlinks
        name: "📂 destroyed-symlinks - Check symlinks that point to non-existent files"
      - id: check-executables-have-shebangs
        name: "📂 check-executables-have-shebangs - Ensure executables have a shebang"
      - id: check-shebang-scripts-are-executable
        name: "📂 check-shebang-scripts-are-executable - Ensure shebang scripts are executable"
      - id: check-illegal-windows-names
        name: "📂 check-illegal-windows-names - Check illegal Windows filenames"
      # Git Checks
      - id: check-merge-conflict
        name: "🌳 check-merge-conflict - Check merge conflict markers"
      - id: check-added-large-files
        name: "🌳 check-added-large-files - Prevent large files from being added"
        args: ["--maxkb=2500"] # 2.5 MB
      - id: no-commit-to-branch
        name: "🌳 no-commit-to-branch - Prevent commits to specific branches"
        args: ["--branch=main", "--branch=master"]

  # --- Security checks ---
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.28.0
    hooks:
      - id: gitleaks
        name: "🔐 gitleaks - Detect secrets in git history"

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        name: "🔐 detect-secrets - Detect secrets in code"

  # --- Shell scripts ---
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.11.0.1
    hooks:
      - id: shellcheck
        name: "🐚 shellcheck - Lint shell scripts"
        files: \.sh$

  # --- Cleanup ---
  # - repo: local
  #   hooks:
  #     - id: cleanup
  #       name: "🧹 cleanup (local) - Remove leftover files"
  #       language: system
  #       entry: "./scripts/clean.sh"
  #       pass_filenames: false
  #       always_run: true
